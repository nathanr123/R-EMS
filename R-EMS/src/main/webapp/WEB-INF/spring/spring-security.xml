<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	<http auto-config="true">
		<intercept-url pattern="/welcome" access="ROLE_USER" />
		<!-- Shows JS Login Dialog -->
		<!-- <http-basic /> -->

		<form-login login-page="/login" default-target-url="/welcome"
			authentication-failure-url="/loginfailed" />

		<logout logout-success-url="/logout" />

		<session-management invalid-session-url="/login?error=sessionExpired"
			session-authentication-error-url="/login?error=alreadyLogin"
			session-fixation-protection="migrateSession">
			<concurrency-control max-sessions="1"
				expired-url="/login?error=sessionExpiredDuplicateLogin"
				error-if-maximum-exceeded="false" />				
		</session-management>

	</http>

	<beans:bean id="webSecurityExpressionHandler"
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password, enabled from users where username=?"
				authorities-by-username-query="select username, role from user_roles where username =?  " />
		</authentication-provider>
	</authentication-manager>

	<!-- <authentication-manager> <authentication-provider> <user-service> <user 
		name="kamal" password="kamal" authorities="ROLE_USER" /> </user-service> 
		</authentication-provider> </authentication-manager> -->
</beans:beans>